{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Quiz Byte application.",
        "title": "Quiz Byte API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8090",
    "basePath": "/api",
    "paths": {
        "/categories": {
            "get": {
                "description": "Returns all available quiz categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get all quiz categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/quiz": {
            "get": {
                "description": "Get a random quiz by sub category\nReturns a random quiz question",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "quiz",
                    "quiz"
                ],
                "summary": "Get a random quiz",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sub Category",
                        "name": "sub_category",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.QuizResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/quiz/check": {
            "post": {
                "description": "Check an answer for a quiz\nChecks if the provided answer is correct",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "quiz",
                    "quiz"
                ],
                "summary": "Check quiz answer",
                "parameters": [
                    {
                        "description": "Answer Request",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CheckAnswerRequest"
                        }
                    },
                    {
                        "description": "Answer details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CheckAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CheckAnswerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/quizzes": {
            "get": {
                "description": "Returns a list of quizzes based on sub-category and count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz"
                ],
                "summary": "Get multiple quizzes by sub-category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sub-category of the quizzes",
                        "name": "sub_category",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of quizzes to fetch (default: 10, max: 50)",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BulkQuizzesResponse"
                        }
                    },
                    "400": {
                        "description": "INVALID_REQUEST if sub_category is missing or count is invalid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "INTERNAL_ERROR for other server-side issues",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Answer": {
            "description": "Detailed result of a user's answer evaluation",
            "type": "object",
            "properties": {
                "accuracy": {
                    "description": "Answer accuracy (0.0 ~ 1.0)",
                    "type": "number"
                },
                "answeredAt": {
                    "type": "string"
                },
                "completeness": {
                    "description": "Answer completeness (0.0 ~ 1.0)",
                    "type": "number"
                },
                "explanation": {
                    "description": "Feedback generated by LLM",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "keywordMatches": {
                    "description": "Matched keywords",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "quizID": {
                    "type": "string"
                },
                "relevance": {
                    "description": "Answer relevance (0.0 ~ 1.0)",
                    "type": "number"
                },
                "score": {
                    "description": "Score between 0.0 and 1.0",
                    "type": "number"
                },
                "userAnswer": {
                    "description": "Descriptive answer",
                    "type": "string"
                }
            }
        },
        "dto.BulkQuizzesResponse": {
            "description": "Response body for a list of quizzes",
            "type": "object",
            "properties": {
                "quizzes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.QuizResponse"
                    }
                }
            }
        },
        "dto.CategoryResponse": {
            "description": "Category information",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CheckAnswerRequest": {
            "description": "Request body for checking a quiz answer",
            "type": "object",
            "properties": {
                "quiz_id": {
                    "description": "Quiz ID to check",
                    "type": "string",
                    "example": "ulid-generated-id"
                },
                "user_answer": {
                    "description": "User's answer text",
                    "type": "string",
                    "example": "Your answer"
                }
            }
        },
        "dto.CheckAnswerResponse": {
            "type": "object",
            "properties": {
                "accuracy": {
                    "description": "Answer accuracy (0.0 ~ 1.0)",
                    "type": "number"
                },
                "completeness": {
                    "description": "Answer completeness (0.0 ~ 1.0)",
                    "type": "number"
                },
                "explanation": {
                    "description": "Feedback generated by LLM",
                    "type": "string"
                },
                "keyword_matches": {
                    "description": "Matched keywords",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "model_answer": {
                    "description": "Model answer (optional)",
                    "type": "string"
                },
                "relevance": {
                    "description": "Answer relevance (0.0 ~ 1.0)",
                    "type": "number"
                },
                "score": {
                    "description": "Overall score (0.0 ~ 1.0)",
                    "type": "number"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "dto.QuizResponse": {
            "description": "Quiz information",
            "type": "object",
            "properties": {
                "diff_level": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "model_answers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "middleware.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}